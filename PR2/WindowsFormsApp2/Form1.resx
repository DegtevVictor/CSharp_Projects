<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAWAAAAA6CAYAAACOA4NpAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAG9BJREFUeF7tnXdcFFe7x31v3huTa95Uk3s1VRNjNPbEaCyxxB5bVIy9YAd7wxIU
        CxpEVFSKBbEAKlUFBVGqIKCAtKV3pCxlgd2lM/u7c4YBUZamiwvr+X4+88cehmWZPfOdM895njPtQKFQ
        KBSlQAVMoVAoSoIKmEKhUJQEFTCFQqEoCSpgCoVCURJUwBQKhaIk3igBJycnY9u2bfjll1/opmKbiYkJ
        RCIR/01TKG2DN0rA9+/fx5QpU7BkyRKcOnWKbiq0BQUFoaSkhP+mKZS2wRslYEtLS6xZswYeHh58C4VC
        oSiPN0rAJ0+exIoVK+Dn58e3UCgUivJ4owS8c+dObNiwAfHx8XwLhUKhKI83SsCamppYv349nj59yrdQ
        KBSK8nhjBExmyBcvXsyFIVoeGcpFKUiIDkOksJxvax4SiQQxMTFN3uLi4pCVlcX/tgrCpOLhvUhki0vB
        8E0USlvnjRFwbGws/vzzz9ciYJkkGSH+Xrjj+xQvMy9fWFjIzey3a9euWduAAQNQUFDAv4uqwUAaboWj
        NyOQWVjGXuIolLbPGyNgkvmwcOFCXL9+nW9pIWRiJDz0xl1rTySXvNxYLSUlBVpaWlBTU5M72pW3qfwI
        mEMEv2NH4BCWhsLyZhxbJhtBNvcRmpKNImpuSjNgUv1xKzAROdLyFrnovzECtre3x9KlS3H79m2+pSWQ
        oSztMTzcHOAQJeHbmk9gYCDmzJkDXV1dvkXVYUe38U7YP6073nu7EwavPo+HTyUoZ+p2eSbRHrtNvBGb
        U4RKvq1hxIh2sodneApEpaoWvChDfqIXzq+ZiO7tPkevUdqweJz+UnddLQG56/z222/5V22H7t27QyAQ
        8K/KkeV+DbZPkpFb0rQe1xzeGAGbmppyKWg+Pj58SwsgEyHy1k1YH7+JqOKXP9ldXFwwfPhwODk58S0q
        DhOLa7pWCM2QoDT9Nrb07YGJBp7IEMsZdTAJsFutA+uAFBQ0OgpmUBTtAGOnYMRnl6hc2EKWHwt/L2dc
        e5CCvCRvGGuqY9J0Q3hmlPF7KBfVEDALkwiHvRfgHZkJaaVie9EbI+CDBw9CQ0MDYWFhfIvikYkEuOVg
        jeP20Sjm255HhvKCOLidWolhH36Ab35ZgRPuKc/tW1xcDDMzM4waNQrp6el8qyqRhpsbjRBQWIIKuX25
        BAlXV6HTissIyJaigm99RimS7LZgsZkX4vMakWqRAFYHr+NhVKbqhx5k+YhxNobu2g0wfZzLNyoXlREw
        eyGXBBhB84ovYnKKFXohf2METCrgSBoaia+2DBUQCZxwzuwYTvhmyp+pL89FXPBDON8OQ0ZGMGwPakND
        3RJhRc/2JutVbNmyBfPmzeNb2goyyGRiBOqPxL/+1Qljz0agrLIYMeaLMMksDEUVDN9xGxNwBbLuaKH/
        37cQmVcs5ziyJ4PfMQyfZ4w78XkorfdsYCANPIvNFl4IzSxS6EnTOpEgycsCpvv24ppAzLcpF9URMIsk
        ACf+OAR7v1QUKnAU/EYIWCqVQl1dHXp6ei23XoAsDwKH0ziqdQD20U2I/xanws/+Kg4fcEd6Lcs8fvwY
        s2fPxv79+/mWtgTpmBXIsFuNtxbbIoVIN+MWtM0FKGmygPPgo7sAe5yikVdcT8xN4geD4SthfCcWufXF
        dZkkOG7YDrM7ocisdYFrTTCFAthrq2PWPC2YB2XLv2g3lbJ0PL58BSc2WEPwCuEvRaJSAoYIASdWYusl
        cudVqrALuoIFXIbsCHdcPzgHX3z6XlV61E+LoXPjCYRS5aUOJSUlYebMmVxqVxUVKEwNw8O7Ztg3fx10
        dGwRmlf3ZpeMospyExBwbT/+HP4d2n01GJP2WeNRWmGdk0UmioCD9h5ozDOFb1Yjub/lBUj1d8bVMxZw
        f1rEN1bh6uqKMWPGwMHBgW9pe1QE6uP78echKCtB2i1z3EzNxqNj4/Du2/9VJ3Wu3WxzhLEyrlYtk+GC
        w/+4IIYd/coXNAuJA68YBTUDZ8Tlyg9DMCm3sGHsPlx0T0B+vW+kXKoEvJYdHOjCTpD/CgKuhDTpMe47
        XoOtQPRqIlcgqiVgEoY4iTELjXAzKhvFCupSChSwBAm2OzB42mb84xiG3KJyyBghAk4uR7de62Hsk6LQ
        oXtzePToEXdLf/nyZfZVOYR+Nrh0ThurZwxDzw59MGubfAGTE+TG3l1Yt+YUXOILUJobCRfDfdircwYe
        abUjtzKUpvrASGsnFm52QHRDIxAmFwK7A5j3GSufz/phzN+OiOf3Lysrw5UrV7gJOJJa1lbhBNxNH/7Z
        j3DBPBAFNaNfQgMjYGkwzhywQnC6WG4GRA2cgH9Fv3XmCGD3rTtOLkXKrZ3oP/coLENVPf4rQ3l2BLzv
        2sPSO63VZEAQVEvAbLdLvgGNH5fhiI0A2Qq6y1CQgElczgBDf1qH0961Z6dLkeywFT9+rYa/bRX3oZvL
        nTt3OAHb2dnxLQRWxP5mUB+vJl/ATD4EDrpYprkF+10S+I5dCXH0HRzatRsahp5Irbn9rYAo4ia0VyzH
        1MYEzFGJ4lwBnI9uxsrpm3AlrJBrJZNuO3bs4JbMbNNk2GHJ5/Ox7eBFBBSUg5HVNmA9ApZG4boR+z1k
        SVn5MpAmCBCfX1KPiEXwN5iBLlOP4GZcLkrq7JKPx6fn47ftZnBPzGe/HVWFlW9+HB55ucDRh8i3DAU5
        QqQmZrUKEaumgCdgrZEPUth+rQgUI2AmHrbqv6DP+ssIYk+gZyMSEjeZjV9XnIZrgghlShqJkKwCUobs
        5ubGtxAaFjCTE4RLa1dh4cJjcEmQ8q1sl88LxbWtazF/9iE4xvKxXlkeIux1MW/cdMw76YusJl1npEj1
        s8bZPTtrBPzkyRMsWrQI2tra3GvFw6AsPwH3TZZjkN5DtNhUDRHwW5NxxC8HFXUEKkfA0khYaQ7FB+/+
        +1loYvgRuGWwI2G5fYYXcI+1OBvwFOIX76ykj3F6Yk/0WWKowgIm5e5RcNZfgl8/4I9Zu3fRechi6Hmm
        t4owhKoJmEzEGY75Hr3UjeCdUqCQfqUQATOJNlDv8jvWXwhClrT6Y5UjO8AYi+fowMInGYVlyusSR48e
        xapVq7gJrmc0JOBy5ARZYO1UNUzRtERgTq2rXWkyPAxW4I/fZ2OnY2zVSOMlBCwrzsATewsc33utJguC
        xH/Hjh0La2tr7nUNFVLkJvnB2vAYDm44Ca9s8nkqUJQZDOsdCzCgz0ZYRDVFpy8jYBlklaUQCVxx9cxO
        TF1zs2rSUMagQhSEMwv74K3fTyBQwjWyG3s3FHUZWsf9UVBZO/SgSEgq2kZ8/7kadG7GIPeFikMS/13f
        7xeM22FTTwYEg+K0YNw2XIXeXTpWyavXDKy/+ABJoqqYMiOKR4D7ReyctAqHjexx96o+5vw0HOPXXcCD
        ZAm7TwXykx7BXm8RBnX7iH2Pzhj05x5Y+iVDxI00GJQKI3H3tAZ+69kLA/7QgrmrO7xCohGVXMT+WIx0
        gR+cTu7CJr0TNZNwMkkGoh/ZQW/VJuzaaAqXwIew1VXH6G+74Ifh62DiloCC5//dplMuRLiNDqZ/VC1s
        fvu4K/ppnsWDtGcDDUVQV8AMykuECLt9BSa71bHRKZVtYftXRRGyWFcs+OY7TDIMxMuXMDUEKfbxgaPD
        Cfau0wAeyQUo4wYHbHvYeczpvwFmfuzFnL3i1ytgJhE3NEbgm3H7YC1QTBxYAQIuRaLNWnTpvQUXgjOQ
        5XsMv33TEf8mX2xHdZj6pSkt9lvN9u3bsWnTJiQkJPAthIYELEXCXQMsGj8bCw+4IqH2CS7LRei1vVAb
        p4alpv4Qkh+VpsLntCamjpyGzQ715QCzv1oQC1e9ZejFHpt3uvTH9H9uIDS9ahKusrISV69exYgRI7iO
        W4NMgrSAS9g84GP2ZHkbH/8wCVtvJ0CSEYTrWpPwSbsO6NxzAU4/zud/oSGaL2BZZQkKAgwxijtZ/413
        OizEpdgiVOQFwnR+T7btLbz1xW645efgsf4ibD5vjr93OiCVxH1b7GuvFvCvWHI2AE/Ftb879oR6bISJ
        PftgaH0Clgbj3KxxmKZhAo8EdoTMCOF7Qh0D+/6F7RaBeJobgsuLh6P7O+R/7oMpq8/BPeIJnE+uxQrd
        s3CJzYUo0g46G3dj/3kvJOaXoiT5HvRmDUGPMetg5JOKUvZC7WZoiNPGjgjLLWU/Miu/G6dx/JwV3JIK
        kRN4BRqTe7Dv/x66TuGzIEqT4Kanjt/+Q/7uNxg4fhuMXR4jViiFJM4VR9VnYOT0fXBoSpZNHdgRszAU
        Njoz8FG1eMnW/gv0nqYPl1TFypfwvIDZvy9Jg6f+H1V/9+0P0HG2JeLKipDpdwp//W87/Kv9e+i2xxNV
        94OKhYm3xOxP3sfb3P/dG2uuRSKfq2zjBfz5Dxh76B5SCsoaF3DXFTjtnYwCBUzuvrqAmXjYLPkZvddf
        QTDbUWrCD6R6ZPUY/Kl9HU8ya4clqslHoPEi9PmCz5ZocBvKxV2SxXXfpSmQ0S+R8PNrJTQgYLJ2wMXt
        mNp3Yv0C7j8Gs3Y6IZb8rIkCJpCUuLy8PP7VMzIzM7nQw7Rp0/iWF6gQ4+ljK2z9ayJ+0TCHh48tTl0L
        Q06zRkMvG4Igo+ASZAeaYsHXXTHZ7BEiLh2G4aMM9h35nzNZuL/tJ3RaZA5BYSUr35a86DZFwKOxxNCT
        laOcWB0n4DnYfswZUTmkaqwMT111MbrfcEzfdxPhQlaYrAbCr2zEyB8mYqWBO+LZ/6mGYgGua7B9StsC
        Ael8tJURIdrhMBZq7oPBvVjkRN+E1i4DHLAJR171oShJRnhkbNUImP2cJQl3cXDhBPStFjC3UxGS3E9j
        xYjRGL/MHAHc3Q57hEURsN89FwMGTMeWRvqYfCohfhqLEI/7bF+vPiblkORnIzk24yXer3HkhyDYUbA0
        BT4GS9DtkyUwCw7AlX0XEJj5Oqr3ypDhtAO9P+qCUfreyJRUV1oyEPua4IhbPHKKKtuWgJlEayz5ejR7
        +xYMYU34gYUT8DB81WUlTB4qNnm5ORDpknUVTpw4gYqK2ieq4gRcc3L0r1/ARLAGBgbo2rUrZs2axS03
        WRtSobds2TJu0Xj5sDe9eTFw0V+J776aibVnfJHdLPkSXiUGzKCCFYjj5p/x3yNmY49jCi8MZcBA4n8c
        I7r0xHAdJy4V7RkkA2IH+nUdgnn1Cbg2xWkI8byEXWN64Iv23zZBwAzrX2to/LUT2uyFKL2eiQ1G6Afj
        xTMwetQKHHUMZU/2uoMHMs9wUXMexr0WAb8IK9+cVMQEhiOthSbH640BM6UojLPFxi+7YszMw7jzGkun
        mXgrzPnse4x7TsCFCLN2QGBGAUqYBkIQEOGR4V/o/n9TsNs6AkIFHLdXFHApEq018fUUXdhG5aC49oRL
        KxEwmdgaP348jIyM+JZqFBeCaEzApCOSUTiRb9++fdGtWzduYrA2ZIJwwoQJuHjxIt8ih4o8xLmcxJoh
        E7HldnIjApShUvwUAWeXoaPcu4ra21t45+O+mHc1roH3rIrVpTtq4at3F+BirDLn2RUgYCYXsa5GWD1i
        Obbus4Cd+TYM6duUEbAYgutaGD9sEbY2IGCSRRNzSx+zBn7NHt//oOvIJdhv8whJeeS9q1CegNnRd74Q
        qVFReFqvRMoginfD8bnfv9BX5G0f4PPvN8Eu6dn/RqhXwOxovLQwGjabhuFjNUvE19vp2D5c/hTOm/vL
        +Zvytj9h/CSfj+3Wg/gBDvb9BN9qXkNUfgl3zJlMd5g7xyKPF3LbEbA0BOfmDsH04/eRnP9CdYjEH8dH
        fYuey03xMK1QTgji9UAmtubOnQsbGxu+pZqGBNy8SbjGBFxUVMQ9hSM7Oxs3btzgRDxy5EiEhoZyPyfx
        XysrKwwZMgTBwcFcm1wqCpDscw7rp4zGVJMg9jLRXF5lBEzCEMUQeulh9DtDsdsjh29XBq8o4OJEOB+a
        i98W7cVF/1RIKkqbEYLgBdxrApbouiC6oHa/eRFS8BMMp+MrMeJHMtnXDSOXn4F7kpg7V5QjYFa+ogwk
        hj9BXE0oomWoX8BsP5Qk4q7ONHz440F4i19dZE3mRQEzaXC94Ip4kbQmK6eNCJjETY5gUOd50LubhPzn
        shzKkXXvIH77Zjq2WTxBZu3QRA2vJwZMJrZICKLuymINCbjq5GhqGlpjAq4NkbCOjg7ef/997vl0pPiC
        tO3btw9Tp05Faenzo4hnVEIqTEKAhT62rZ+HPlPPIFDa3A7wCgKWVaK8RAAb01PQnfANuuz2YBWlLF5F
        wAykwecx66dF0DoXgFQp6VPNiQGXIdPLEDOG9kV3NfbOL1TI9qTGYEWcFoDrOnMw6PdF2GQZglz2ZH/9
        ApahQpyDjITIFpcvoT4By8qLIQm3x+ljf2PSh6Oh4/0aFw9iYnF1Ti98NO4YPDILkR/uiQcpBSiuFc9t
        IwLOg+8/f6Dzh+Ox3T4SebXWymSyfXFi4W+YpG2NkOfygluG3NxcLtQgFAr5lmeQJ2CQ2Kqvry/fUk3D
        Aq4qxNCD1nZtmDxIY09rQj2FGM2YhCOQyrxx48ahV69eXMpZZGQkt1Lb1q1b+T3qIisRISsxCD4hMQi+
        fATzB/4Np9QSVuDFyMupWxotn5efhGPKpUj1vIdgEXusz8zBO5MvIpa91ZNV5iFD+LqXP3yVSbgypDnr
        YOiPatj4UgJm/4LoMc6vHIVu7/bE+KVGuBslhJQ/f5n8RMQkpSI1NhyhMXGIE1V/NnbkGXcHe1buxHo9
        dySVssf0tQqYyFeIlJhQhNaUv7OfKTMFMd6eCG32xbxx5ApYVoFSaTK8nUOQk/sQRlMGYJZFLDsSZVCR
        nfkS8xrNpLaAEx7h9oMkSIoruDuSatrGJJzYF/8M7IQP32qHT2eegg8pH5WRtSBuQG/OYExcfwF+T+tL
        pFcc5AnHZOQ4bNgweHl58a3P2L17N7cKGpHc8zQiYJY6pcg5IbDT3oHNmsbPlyLzAh7Ta3ST8oDJZOC1
        a9fwwQcfYOLEidwonaxV8WL8VyZJhb+dKTTXX8KDyDB4eMezV+o8xLuegsav47HBOggpEd7wiGmqSpsj
        YPaELRYi6Jw6/jjhi9RIF9wMyWfPn2JkOmnhq3fm4UJUJiLtnRDM5QC/Tl4lDa16BPwTBi4jaWg5EMZ5
        wGrvfPT8YiArYFt4uz9ERJQXLm6fgb6fjqwjYLD6y/A2hfqwbnj3hbu19wcvh8G9eIiz/GB84DC0DJwQ
        nimBjClA3J2T2LXfAGZ+6azy2VGx4Aa01QaiUz81/G0nQCE5jLIchFhpY1a3fhixsLqfyVCWFQjLLdPx
        3Zekjz1sYrFPLcoLkOh9Hhojvnzu87bvOgh/mYW8RDircWoEzHpBnPEQZ9WW4pR/LCKdXBHG3hWXimNg
        u2kYPpp5CYLcCNy8Fd5COcC1ycWDg2PR8dvJmK19HRGiojol8c0TMIOiqKvQ6P875u53hKCZ606/pIBJ
        +EEPAzvNxRGHGzCY1R+fvvsW+4V+ioHqB3HeLRr5ZC0Ifu+WgmQWkBLj9u3bc52JTLS9eAu/cuVKbN68
        udbauuxVP+YWdswciA61OmK7bjOx2arq1vAZrLByY+F5fgsm9PsMHXr9juUm9xHDHuTneIlCDLIs5saN
        G9GpUyf0798fQ4cOrRP/lZVkIuT6fsz5aSzWmQUil3vfcohTfHFm/TR0/X0Prgpy2E/ZVJon4MpS9v8y
        X42v//Mn9nnx1VWySpTleOHQqC/xlboJHill8e9XLMRgchFlewCTundG+96zsPGyL5Li3WH410D0nbAC
        x8xOYcPwfvjfWv3jw8m7cCUokxVnNeyFKMIJx+YMYkfCZJ8eGLtAHw5PUrlCDEYYidCoIHi4WGDvhIH4
        sl03jFA7ipuh6ZDIpIh30ceCXzs963/vDcXc9f9g/5pp6Fbzdzvg63EaOGRmih1z+j7b938GYMomh6Yv
        +l9eiLQAK2ydVus9uK09OvaZjl13SUGE4nkm4HJIhQEwXTgQn84wwIMschTJXZUYaeTOo8NgrDL2R2ZL
        fIg68AIeexBOieygSs6EXaMCfq4QQykCzoPv4UnoNPkYXNMKlVZirK+vz+XOHjlyhMsuILfwtR85T3Ju
        SQnyoUOH6qR9KZZipPqcw7qli5tRigx4enqiX79+3MlA1n8Qi5sVlX2D4QXcb/MbXIrc+ql/Ek6ZsAI2
        NoFbfB5K6snMqlfAraYUWeyDwz/3xmR9N6S1gifUkkXMJ02ahMGDB3NSqyYxMZF7ErKJiQnf0lI0dzGe
        Kkh2xNmzZ/HJJ59wYRJKU6GL8bQFWp+Ay5AV4o3gNDHKGkiLbVjAU7H9rFIX4ylD5p2/MeBHTZzxz4BE
        AYFoRUAyCjp06MAVO5CRL+HBgwdc0YOlpSX3uuVoxnKUL0AyIEjsWu4XTpEPXY6yTdAaBExyfA9MXooz
        j8Lga2ENj6QClDZSk1CfgFvHcpTSJzBVG4SJ+xwRxycytwbIpBbJKli+fDn3iHYCybmdP38+bt26xb1u
        ScgsdZMXZKe8GiqyILuq0yoEHHcFsz78GfP32iJIWCxndb66yBcw09oXZFcuJAwxefJk9OnTB3fv3uXa
        yKQcEbCHhwf3ukVp7iOJKC9Pkx9JtAh7L3ohobFyZEqL0DpjwI0jX8Bkad0FWGjkjKhsxT2YU2UETCBZ
        BSQMQZafJGEIXV1d7lH0QUFB/B4tSRMeyklRCEySHVYsNoM7fShnq0alBEwyINYdw50nil3dUaUETEIO
        JKuAFF6QL5+EI8jTkMlk3OuAPJb+xjkz7D/R9EwISnMhGRBNfCw9kwynrSdx2z8BIhqGeO2ojoAZFAks
        sccqAAn0sfT1Q5Z5VFNTQ+/eveHo6IilS5dyaWqkUu61ICtE/H0bWJ00hw+NA7cQIvgd04dDaFqtR1/V
        B3viRDvA2CkY8c3Mz6S8OiojYCYd9w0t4BsnhFSBo1+CSgmYQJZzJBVma9eu5cp9yZOQn1+GsiUhi16H
        wNnFDhd9aBiiJWCy7mLvEVfEZEmaWOIuRbKzLe6GJyO7vngxhVIvZF2bc7jwMA7CIsV7ROUEbGtry03E
        9ejRA507d4apqSn/k9eETIwED1c4XnBqeqUSpYkUIsLcBLcEGShsdPRbC7K+s819hKZk05Q0SrNgktxg
        4R2LLHHL1DuonIDJAuxkXQVSXfb555/LWYay5ZFJEuHn5Yrrromt4um0qgEDabgVjt6MQGYrKP6hUBSB
        ygmYQJZ27NixIzch5+Liwre+TsgTa1OQEB2GSCGNBSsEJhUP70UiW1xKQzsUlUElBUzygAcNGsTlBT//
        JGQKhUJpPaikgEUiEbcIO9nCw8P5VgqFQmldqKSACQEBAdwjf0pKaBSWQqG0TlRWwBQKhdLaoQKmUCgU
        JUEFTKFQKEqCCphCoVCUBBUwhUKhKAkqYAqFQlESVMAUCoWiJKiAKRQKRUlQAVMoFIpSAP4fruTXXblN
        RNcAAAAASUVORK5CYII=
</value>
  </data>
</root>